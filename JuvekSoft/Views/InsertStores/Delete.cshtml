@model JuvekSoft.Models.InsertStore

@{
    ViewBag.Title = "Delete";
}

<h2>Удалить</h2>

<h4 class="text-primary1">
    Это действие необратимо, вы уверены, что хотите удалить @*@Html.DisplayFor(model.InsertMaterial.InsMatName)*@?
</h4>
@using (Html.BeginForm())
{@Html.AntiForgeryToken()
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <table>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="image1" id="image1" class="form-control" width="100%" />
                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Unit1.UnitName, "Единицы", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.TextBoxFor(model => model.Unit1.UnitName, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.SizeUnits, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.SizeUnits, "Единицы", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.LabelFor(model => model.InsMat, "Материал вставки", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.TextBoxFor(model => model.Name, new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.TextBoxFor(model => model.InsertMaterial.InsMatName, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.SizeUnits, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">

                    @Html.LabelFor(model => model.FacType, "Тип огранки", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.TextBoxFor(model => model.Name, new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.TextBoxFor(model => model.FacetingType.FacName, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.FacType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Unit.UnitName, "Единицы", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.TextBoxFor(model => model.Unit.UnitName, new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.TextBoxFor(model => model.Unit.UnitName, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.QuantityUnits, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Size1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.TextBoxFor(model => model.Name, new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.TextBoxFor(model => model.Size1, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Size1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Cost, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Size2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.TextBoxFor(model => model.Name, new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.TextBoxFor(model => model.Size2, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Size2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @*@Html.LabelFor(model => model.Size1, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.LabelFor(model => model.Unit2.UnitName, "Единицы", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Unit2.UnitName, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Unit2.UnitName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Size3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.TextBoxFor(model => model.Name, new { @class = "form-control", @readonly = "readonly" })*@
                        @Html.TextBoxFor(model => model.Size3, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Size3, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.OtherInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.OtherInfo, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.OtherInfo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
    </table>





    <div class="form-actions no-color">
        <button type="submit" value="Удалить" class="btn btn-primary"> Удалить</button>

    </div>
    <div>
        @Html.ActionLink("Вернуться", "Index")
    </div>

</div>}
