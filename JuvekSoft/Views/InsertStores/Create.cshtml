@model JuvekSoft.Models.InsertStore

@{
    ViewBag.Title = "Create";
}

<h2>Добавить новую вставку</h2>


@using (Html.BeginForm("Create", "InsertStores", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <table>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="image1" id="image1" class="form-control" width="100%" />
                        @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.SizeUnits, "Единицы", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SizeUnits", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SizeUnits, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.InsMat, "Материал вставки", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("InsMat", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.InsMat, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.FacType, "Тип огранки", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("FacType", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FacType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.QuantityUnits, "Единицы", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("QuantityUnits", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.QuantityUnits, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Size1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Size1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Size1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Size2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Size2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Size2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.CostUnits, "Единицы", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CostUnits", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CostUnits, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Size3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Size3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Size3, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.OtherInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OtherInfo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OtherInfo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
        </tr>
    </table>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" value="Добавить" class="btn btn-primary">Добавить</button>

        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Вернуться", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
